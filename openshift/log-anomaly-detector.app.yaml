apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: log-anomaly-detector
  namespace: aiops-prod-log-analysis
objects:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        app: log-anomaly-detector-f20
      name: log-anomaly-detector-f20
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      storageClassName: ${STORAGE_CLASS}
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      labels:
        app: log-anomaly-detector
      name: log-anomaly-detector
    spec:
      lookupPolicy:
        local: true
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      labels:
        app: log-anomaly-detector
      name: anomaly-detector
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: log-anomaly-detector:latest
      source:
        git:
          ref: master
          uri: https://github.com/AICoE/log-anomaly-detector.git
        type: Git
      strategy:
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: python:3.6
            namespace: openshift
        type: Source
      triggers:
        - imageChange: {}
          type: ImageChange
        - type: ConfigChange
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: log-anomaly-detector-f20
      name: log-anomaly-detector-f20
    spec:
      replicas: 1
      selector:
        deploymentconfig: log-anomaly-detector-f20
      template:
        metadata:
          labels:
            app: log-anomaly-detector-f20
            deploymentconfig: log-anomaly-detector-f20
        spec:
          containers:
            - name: log-anomaly-detector
              image: log-anomaly-detector:latest
              command: ["python"]
              args: ["app.py", "run", "--config-yaml", "validation_data/.env_config.yaml"]
              imagePullPolicy: Always
              resources:
                limits:
                  cpu: 2
                  memory: 2Gi
              volumeMounts:
                - mountPath: /opt/app-root/src/models
                  name: model-storage
                - name: escerts
                  mountPath: "/opt/app-root/src/certs"
                  readOnly: true
                - mountPath: /opt/app-root/src/validation_data
                  name: volume-ehbcr

          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
            - name: escerts
              secret:
                secretName: "log-anomaly-detector-odcs"
            - name: model-storage
              persistentVolumeClaim:
              claimName: log-anomaly-detector-f20
            - configMap:
                defaultMode: 420
                name: "factory20-config"
              name: volume-ehbcr

      test: false
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - log-anomaly-detector
            from:
              kind: ImageStreamTag
              name: log-anomaly-detector:latest
          type: ImageChange
parameters:
  - description: Name of the storage backend to be used for loading training and inference
      data ('local' or 'es')
    name: STORAGE_BACKEND
    value: es
  - name: MODEL_DIR
    value: models
  - name: CMD
    value: "run --config-yaml validation_data/.env_config.yaml"
  - name: MODEL_FILE
    value: SOM.model
  - name: W2V_MODEL_FILE
    value: W2V.model
  - name: TRAIN_TIME_SPAN
    value: "36000"
  - name: TRAIN_MAX_ENTRIES
    value: "10000"
  - name: TRAIN_ITERATIONS
    value: "15000"
  - description: True if updating existing model, False if starting new model
    name: TRAIN_UPDATE_MODEL
    value: "True"
  - name: INFER_TIME_SPAN
    value: "60"
  - name: INFER_MAX_ENTRIES
    value: "3000"
  - name: INFER_LOOPS
    value: "1500"
  - name: INFER_ANOMALY_THRESHOLD
    value: "1.3"
  - name: ES_ENDPOINT
    value: https://elastic1-dh-prod-storage.cloud.datahub.upshift.redhat.com
  - name: ES_INPUT_INDEX
    value: logstash-
  - name: ES_TARGET_INDEX
    value: odcs-anomaly-detect-
  - name: ES_CERT_DIR
    value: /opt/app-root/src/certs
  - name: STORAGE_CLASS
    value: ceph-dyn-datahub-paas
  - name: ES_CERT_SECRET
    value: log-anomaly-detector-odcs
  - name: ES_QUERY
    value: tags:"odcs-prod"
