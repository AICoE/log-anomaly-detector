---
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: kibana-deployment-template
  labels:
    app: log-anomaly-detector
    component: kibana
parameters:
  - description: Application name
    value: 'lad-kibana'
    name: APPLICATION_NAME
    required: true
  - description: The location of the elastisearch image
    name: IMAGE_KIBANA
    value: docker.elastic.co/kibana/kibana:7.1.1
  - name: LIMIT_CPU
    value: "1"
    description: Limit number of CPUs allocated to the container
  - name: LIMIT_MEM
    value: "2G"
    description: Limit amount of memory allocated to the container
  - name: ELASTICSEARCH_HOSTS_URL
    value: "http://$(LAD_ELASTICSEARCH_SERVICE_HOST):$(LAD_ELASTICSEARCH_SERVICE_PORT_HTTP)"
    description: Url to elasticsearch server
objects:
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: ${APPLICATION_NAME}
      labels:
        deploymentConfig: ${APPLICATION_NAME}
        app: ${APPLICATION_NAME}
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}
      strategy:
        type: Rolling
      template:
        metadata:
          labels:
            deploymentConfig: ${APPLICATION_NAME}
            app: ${APPLICATION_NAME}
        spec:
          containers:
            - env:
                - name: ELASTICSEARCH_HOSTS
                  value: ${ELASTICSEARCH_HOSTS_URL}
              name: ${APPLICATION_NAME}
              image: ${IMAGE_KIBANA}
              imagePullPolicy: IfNotPresent
              resources:
                limits:
                  cpu: ${LIMIT_CPU}
                  memory: ${LIMIT_MEM}
          restartPolicy: Always

  - apiVersion: v1
    kind: Service
    metadata:
      name: ${APPLICATION_NAME}-service
      labels:
        app: ${APPLICATION_NAME}
    spec:
      ports:
        - port: 5601
          name: http
      selector:
        app: ${APPLICATION_NAME}

  - apiVersion: v1
    kind: Route
    metadata:
      name: lad-kibana-${APPLICATION_NAME}-route
      labels:
        app: lad-kibana-${APPLICATION_NAME}
    spec:
      to:
        kind: Service
        name: ${APPLICATION_NAME}-service
